/* Navbar Styles */
.navbar {
  display: flex;
  justify-content: flex-end; /* Ensure items align to the right */
  padding: 10px;
}

.navLeft {
  display: flex;
  align-items: center;
  margin-right: auto; /* Pushes navLeft items to the far left */
}

.navRight {
  display: flex;
  align-items: center;
}

.homeIcon, .messageIcon {
  font-size: 24px;
  cursor: pointer;
  color: #0070f3;
  margin-right: 20px;
}

/* Main Layout */
.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  max-width: 800px;
  margin: 0 auto;
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
}

/* Chat Styles */
.chatContainer {
  flex: 1;
  overflow-y: auto;
  padding: 20px;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 8px;
  margin-bottom: 20px;
}

.messageSent, .messageReceived {
  max-width: 60%;
  padding: 10px 15px;
  border-radius: 20px;
  margin-bottom: 10px;
  position: relative;
}

.messageSent {
  background: #0070f3;
  color: white;
  align-self: flex-end;
  text-align: right;
}

.messageReceived {
  background: #e6e6e6;
  color: black;
  align-self: flex-start;
  text-align: left;
}

.messageSent span, .messageReceived span {
  display: block;
  font-size: 12px;
  color: #aaa;
  margin-top: 5px;
}

.form {
  display: flex;
  border-top: 1px solid #ccc;
  padding: 10px;
  background: #fff;
  border-radius: 0 0 8px 8px;
}

.input {
  flex: 1;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-right: 10px;
}

.sendButton {
  padding: 10px 15px;
  background-color: #0070f3;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.sendButton:hover {
  background-color: #005bb5;
}

/* Badge Styles */
.badge {
  background-color: red;
  color: white;
  border-radius: 50%;
  padding: 2px 6px;
  font-size: 12px;
  position: relative;
  top: -10px;
  left: -10px;
}

/* Form Styles */
.formContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
}

.formField {
  margin-bottom: 10px;
}

.formLabel {
  margin-bottom: 5px;
  font-weight: bold;
}

.formInput {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.submitButton {
  padding: 10px 15px;
  background-color: #0070f3;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.submitButton:hover {
  background-color: #005bb5;
}

.errorMessage {
  color: red;
}

/* Job Listing Styles */
.jobList, .conversationList, .messageList, .freelancerList {
  list-style-type: none;
  padding: 0;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
}

.jobCard, .conversationItem, .freelancerCard, .messageItem {
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 20px;
  margin-bottom: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.jobCard h2, .conversationItem h2, .freelancerCard h2 {
  margin: 0 0 10px 0;
}

.jobCard p, .conversationItem p, .freelancerCard p, .messageItem p {
  margin: 5px 0;
}

.messageButton {
  background-color: #0070f3;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 5px 10px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 5px;
}

.messageButton:hover {
  background-color: #005bb5;
}

/* Message Read/Unread Styles */
.readMessage {
  background-color: #f9f9f9;
}

.unreadMessage {
  background-color: #e6f7ff;
}

/* Job Info */
.jobInfo {
  background: #f9f9f9;
  padding: 20px;
  border-radius: 8px;
  margin-bottom: 20px;
}

.jobInfo h2 {
  margin: 0 0 10px 0;
}

.freelancerImage {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin-top: 10px;
}

/* Hero Section */
.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 4rem 0;
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 480px;
  height: 360px;
  margin-left: -400px;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
}

.center::before,
.center::after {
  content: "";
  left: 50%;
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.logo {
  position: relative;
}

/* Grid Layout */
.grid {
  display: grid;
  grid-template-columns: repeat(3, minmax(35%, auto));
  max-width: 100%;
  width: var(--max-width);
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
  text-wrap: balance;
}

/* Responsive Styles */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
